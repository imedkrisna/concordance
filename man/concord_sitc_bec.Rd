% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/concord_sitc_bec.R
\name{concord_sitc_bec}
\alias{concord_sitc_bec}
\title{Converting SITC and BEC Codes}
\source{
Concordance tables provided by:
\itemize{
  \item United Nations Trade Statistics <https://unstats.un.org/unsd/trade/classifications/correspondence-tables.asp>
}
}
\usage{
concord_sitc_bec(sourcevar, origin, destination, dest.digit = 2, all = FALSE)
}
\arguments{
\item{sourcevar}{An input character vector of SITC or BEC codes. The function accepts 1 to 5-digit codes for SITC and 1 to 3-digit codes for BEC.}

\item{origin}{A string setting the input industry classification:  "SITC1" (1950), "SITC2" (1974), "SITC3" (1985), "SITC4" (2006), "BEC4" (2016).}

\item{destination}{A string setting the output industry classification: "SITC1" (1950), "SITC2" (1974), "SITC3" (1985), "SITC4" (2006), "BEC4" (2016).}

\item{dest.digit}{An integer indicating the preferred number of digits for output codes. Allows 1 to 5 digits for SITC and 1 to 3 digits for BEC codes. The default is 2 digits.}

\item{all}{Either TRUE or FALSE. If TRUE, the function will return (1) all matched outputs for each input, and (2) the share of occurrences for each matched output among all matched outputs. Users can use the shares as weights for more precise concordances. If FALSE, the function will only return the matched output with the largest share of occurrences (the mode match). If the mode consists of multiple matches, the function will return the first matched output.}
}
\value{
The matched output(s) for each element of the input vector. Either a list object when all = TRUE or a character vector when all = FALSE.
}
\description{
Concords Standard International Trade Classification codes (SITC1, SITC2, SITC3, SITC4) to and from Broad Economic Classification codes (BEC Revision 4).
}
\examples{
# one input: one-to-one match
concord_sitc_bec(sourcevar = "73161",
                origin = "SITC1", destination = "BEC4",
                dest.digit = 3, all = FALSE)

concord_sitc_bec(sourcevar = "73161",
                origin = "SITC1", destination = "BEC4",
                dest.digit = 3, all = TRUE)

# two inputs: multiple-to-one match
concord_sitc_bec(sourcevar = c("04300", "05484"),
                origin = "SITC1", destination = "BEC4",
                dest.digit = 3, all = FALSE)

concord_sitc_bec(sourcevar = c("04300", "05484"),
                origin = "SITC1", destination = "BEC4",
                dest.digit = 3, all = TRUE)

# two inputs: repeated
concord_sitc_bec(sourcevar = c("04300", "04300"),
                origin = "SITC1", destination = "BEC4",
                dest.digit = 3, all = FALSE)

# if no match, will return NA and give warning message
concord_sitc_bec(sourcevar = c("04300", "04301"),
                origin = "SITC1", destination = "BEC4",
                dest.digit = 3, all = FALSE)

# 4-digit inputs, 2-digit outputs
concord_sitc_bec(sourcevar = c("0430", "5121"),
                origin = "SITC1", destination = "BEC4",
                dest.digit = 2, all = TRUE)

# 3-digit inputs, 1-digit outputs
concord_sitc_bec(sourcevar = c("043", "512"),
                origin = "SITC1", destination = "BEC4",
                dest.digit = 1, all = TRUE)

# BEC4 to SITC1
concord_sitc_bec(sourcevar = c("1", "7"),
                origin = "BEC4", destination = "SITC1",
                dest.digit = 5, all = FALSE)
}
